{"version":3,"sources":["Components/SocialNetworkProfile/SocialNetworkProfile.module.css","Components/TransactionHisory/TransactionHisory.module.css","Components/StatisticSection/StatisticSection.module.css","Components/FriendListItem/FriendListItem.module.css","Components/FriendsList/FriendsList.module.css","utils/RandomColor.js","Components/StatisticSection/StatisticSection.jsx","Components/SocialNetworkProfile/SocialNetworkProfile.jsx","Components/FriendListItem/FriendListItem.jsx","Components/FriendsList/FriendsList.jsx","Components/TransactionHisory/TransactionHisory.jsx","App.js","index.js"],"names":["module","exports","RandomColor","Math","floor","random","toString","StatisticSection","statistics","className","css","title","statList","map","id","label","percentage","item","style","backgroundColor","SociallNetworkProfile","name","tag","location","avatar","followers","views","likes","avatarWidth","awatarHeight","profile","description","src","alt","width","heigth","stats","quantity","FriendListItem","friends","isOnline","status","statusOnline","statusOfline","FriendsList","friendList","TransactionHisory","transactions","transactionHistory","headlines","theadRows","tbody","type","amount","currency","tbodyRows","tableCell","App","user","avatarWeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1ada56d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"SocialNetworkProfile_profile__3_HhF\",\"description\":\"SocialNetworkProfile_description__JGgSL\",\"avatar\":\"SocialNetworkProfile_avatar__MY-3J\",\"name\":\"SocialNetworkProfile_name__3hTBF\",\"tag\":\"SocialNetworkProfile_tag__2g_wc\",\"location\":\"SocialNetworkProfile_location__1Nd5p\",\"title\":\"SocialNetworkProfile_title__1N4X7\",\"stats\":\"SocialNetworkProfile_stats__3h5IN\",\"label\":\"SocialNetworkProfile_label__1zl1u\",\"quantity\":\"SocialNetworkProfile_quantity__2-63t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHisory_transactionHistory__235hf\",\"headlines\":\"TransactionHisory_headlines__hqHap\",\"theadRows\":\"TransactionHisory_theadRows__1t3nH\",\"tableCell\":\"TransactionHisory_tableCell__1IjK-\",\"tbodyRows\":\"TransactionHisory_tbodyRows__1c9r4\",\"typeTransaction\":\"TransactionHisory_typeTransaction__1TlzT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"StatisticSection_statistics__3ZhlJ\",\"title\":\"StatisticSection_title__3E4IK\",\"statList\":\"StatisticSection_statList__Vni1k\",\"item\":\"StatisticSection_item__2pEUi\",\"label\":\"StatisticSection_label__tJa-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__3zOG5\",\"status\":\"FriendListItem_status__X6dWu\",\"statusOnline\":\"FriendListItem_statusOnline__2kwgS\",\"statusOfline\":\"FriendListItem_statusOfline__OsnAF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendsList_friendList__2q5gL\"};","function RandomColor() {\n  return Math.floor(Math.random() * 16777215).toString(16);\n}\n\nexport default RandomColor;\n","import PropTypes from \"prop-types\";\nimport css from \"./StatisticSection.module.css\";\nimport RandomColor from \"../../utils/RandomColor\";\nfunction StatisticSection({ statistics }) {\n  return (\n    <section className={css.statistics}>\n      <h2 className={css.title}>Upload stats</h2>\n\n      <ul className={css.statList}>\n        {statistics.map(({ id, label, percentage }) => (\n          <li\n            className={css.item}\n            key={id}\n            style={{ backgroundColor: \"#\" + RandomColor() }}\n          >\n            <span className={css.label}>{label}</span>\n            <span className={css.percentage}>{`${percentage}%`}</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nexport default StatisticSection;\n\nStatisticSection.propTypes = {\n  statistics: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport css from \"./SocialNetworkProfile.module.css\";\nfunction SociallNetworkProfile({\n  name,\n  tag,\n  location,\n  avatar,\n  followers,\n  views,\n  likes,\n  avatarWidth,\n  awatarHeight,\n}) {\n  return (\n    <div className={css.profile}>\n      <div className={css.description}>\n        <img\n          src={avatar}\n          alt={name}\n          className={css.avatar}\n          width={avatarWidth}\n          heigth={awatarHeight}\n        />\n        <p className={css.name}>{name}</p>\n        <p className={css.tag}>@{tag}</p>\n        <p className={css.location}>{location}</p>\n      </div>\n\n      <ul className={css.stats}>\n        <li>\n          <span className={css.label}>Followers</span>\n          <span className={css.quantity}>{followers}</span>\n        </li>\n        <li>\n          <span className={css.label}>Views</span>\n          <span className={css.quantity}>{views}</span>\n        </li>\n        <li>\n          <span className={css.label}>Likes</span>\n          <span className={css.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default SociallNetworkProfile;\n\nSociallNetworkProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  followers: PropTypes.number.isRequired,\n  views: PropTypes.number.isRequired,\n  likes: PropTypes.number.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport css from \"./FriendListItem.module.css\";\nfunction FriendListItem({ friends }) {\n  return friends.map(({ id, isOnline, avatar, name }) => (\n    <li className={css.item} key={id}>\n      <span\n        className={`${css.status} ${\n          isOnline ? css.statusOnline : css.statusOfline\n        }`}\n      ></span>\n      <img className={css.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={css.name}>{name}</p>\n    </li>\n  ));\n}\nexport default FriendListItem;\n\nFriendListItem.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import FriendListItem from \"../FriendListItem/FriendListItem\";\nimport css from \"./FriendsList.module.css\";\nfunction FriendsList({ friends }) {\n  return (\n    <div>\n      <ul className={css.friendList}>\n        <FriendListItem friends={friends} />\n      </ul>\n    </div>\n  );\n}\n\nexport default FriendsList;\n","import PropTypes from \"prop-types\";\nimport css from \"./TransactionHisory.module.css\";\nfunction TransactionHisory({ transactions }) {\n  return (\n    <div>\n      <table className={css.transactionHistory}>\n        <thead>\n          <tr className={css.headlines}>\n            <th className={css.theadRows}>Type</th>\n            <th className={css.theadRows}>Amount</th>\n            <th className={css.theadRows}>Currency</th>\n          </tr>\n        </thead>\n\n        <tbody className={css.tbody}>\n          {transactions.map(({ id, type, amount, currency }) => {\n            return (\n              <tr key={id} className={css.tbodyRows}>\n                <td className={`${css.tableCell} ${css.tableCell}`}>{type}</td>\n                <td className={css.tableCell}>{amount}</td>\n                <td className={css.tableCell}>{currency}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default TransactionHisory;\n\nTransactionHisory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\n// TransactionHisory.propTypes = {\n//   id: PropTypes.string.isRequired,\n//   type: PropTypes.string.isRequired,\n//   amount: PropTypes.number.isRequired,\n//   currency: PropTypes.string.isRequired,\n// };\n","import user from \"./data/user.json\";\nimport statistics from \"./data/statistics.json\";\nimport transactions from \"./data/transactions.json\";\nimport \"./App.css\";\nimport StatisticSection from \"./Components/StatisticSection/StatisticSection\";\nimport SociallNetworkProfile from \"./Components/SocialNetworkProfile/SocialNetworkProfile\";\nimport FriendsList from \"./Components/FriendsList/FriendsList\";\nimport friends from \"./data/friends.json\";\nimport TransactionHisory from \"./Components/TransactionHisory/TransactionHisory\";\nfunction App() {\n  return (\n    <div className=\"container\">\n      <SociallNetworkProfile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        followers={user.stats.followers}\n        views={user.stats.views}\n        likes={user.stats.likes}\n        avatarWidth={100}\n        avatarWeight={100}\n      />\n      <StatisticSection statistics={statistics} />\n      <FriendsList friends={friends} />\n      <TransactionHisory transactions={transactions} />\n    </div>\n  );\n}\n// TransactionHisory.propTypes = {\n//   id: PropTypes.string.isRequired,\n//   type: PropTypes.string.isRequired,\n//   amount: PropTypes.number.isRequired,\n//   currency: PropTypes.string.isRequired,\n// };\n\n//  id={transactions.id}\n//   type={transactions.type}\n//   amount={transactions.amount}\n//   currency={transactions.currency}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}